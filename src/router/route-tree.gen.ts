/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './../pages/__root';
import { Route as DashboardDashboardImport } from './../pages/dashboard/_dashboard';
import { Route as DashboardDashboardIndexImport } from './../pages/dashboard/_dashboard/index';
import { Route as DashboardDashboardProfileIndexImport } from './../pages/dashboard/_dashboard/profile/index';

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')();
const AboutLazyImport = createFileRoute('/about')();
const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any);

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../pages/about.lazy').then((d) => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./../pages/index.lazy').then((d) => d.Route));

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => DashboardRoute,
} as any);

const DashboardDashboardIndexRoute = DashboardDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardDashboardRoute,
} as any);

const DashboardDashboardProfileIndexRoute =
  DashboardDashboardProfileIndexImport.update({
    id: '/profile/',
    path: '/profile/',
    getParentRoute: () => DashboardDashboardRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/about': {
      id: '/about';
      path: '/about';
      fullPath: '/about';
      preLoaderRoute: typeof AboutLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/dashboard': {
      id: '/dashboard';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof DashboardImport;
      parentRoute: typeof rootRoute;
    };
    '/dashboard/_dashboard': {
      id: '/dashboard/_dashboard';
      path: '/dashboard';
      fullPath: '/dashboard';
      preLoaderRoute: typeof DashboardDashboardImport;
      parentRoute: typeof DashboardRoute;
    };
    '/dashboard/_dashboard/': {
      id: '/dashboard/_dashboard/';
      path: '/';
      fullPath: '/dashboard/';
      preLoaderRoute: typeof DashboardDashboardIndexImport;
      parentRoute: typeof DashboardDashboardImport;
    };
    '/dashboard/_dashboard/profile/': {
      id: '/dashboard/_dashboard/profile/';
      path: '/profile';
      fullPath: '/dashboard/profile';
      preLoaderRoute: typeof DashboardDashboardProfileIndexImport;
      parentRoute: typeof DashboardDashboardImport;
    };
  }
}

// Create and export the route tree

interface DashboardDashboardRouteChildren {
  DashboardDashboardIndexRoute: typeof DashboardDashboardIndexRoute;
  DashboardDashboardProfileIndexRoute: typeof DashboardDashboardProfileIndexRoute;
}

const DashboardDashboardRouteChildren: DashboardDashboardRouteChildren = {
  DashboardDashboardIndexRoute: DashboardDashboardIndexRoute,
  DashboardDashboardProfileIndexRoute: DashboardDashboardProfileIndexRoute,
};

const DashboardDashboardRouteWithChildren =
  DashboardDashboardRoute._addFileChildren(DashboardDashboardRouteChildren);

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRouteWithChildren;
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRouteWithChildren,
};

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
);

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute;
  '/about': typeof AboutLazyRoute;
  '/dashboard': typeof DashboardDashboardRouteWithChildren;
  '/dashboard/': typeof DashboardDashboardIndexRoute;
  '/dashboard/profile': typeof DashboardDashboardProfileIndexRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute;
  '/about': typeof AboutLazyRoute;
  '/dashboard': typeof DashboardDashboardIndexRoute;
  '/dashboard/profile': typeof DashboardDashboardProfileIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexLazyRoute;
  '/about': typeof AboutLazyRoute;
  '/dashboard': typeof DashboardRouteWithChildren;
  '/dashboard/_dashboard': typeof DashboardDashboardRouteWithChildren;
  '/dashboard/_dashboard/': typeof DashboardDashboardIndexRoute;
  '/dashboard/_dashboard/profile/': typeof DashboardDashboardProfileIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/profile';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/about' | '/dashboard' | '/dashboard/profile';
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dashboard'
    | '/dashboard/_dashboard'
    | '/dashboard/_dashboard/'
    | '/dashboard/_dashboard/profile/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  AboutLazyRoute: typeof AboutLazyRoute;
  DashboardRoute: typeof DashboardRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  DashboardRoute: DashboardRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/dashboard"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_dashboard"
      ]
    },
    "/dashboard/_dashboard": {
      "filePath": "dashboard/_dashboard.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_dashboard/",
        "/dashboard/_dashboard/profile/"
      ]
    },
    "/dashboard/_dashboard/": {
      "filePath": "dashboard/_dashboard/index.tsx",
      "parent": "/dashboard/_dashboard"
    },
    "/dashboard/_dashboard/profile/": {
      "filePath": "dashboard/_dashboard/profile/index.tsx",
      "parent": "/dashboard/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
